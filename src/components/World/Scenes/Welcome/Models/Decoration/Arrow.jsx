/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 scene.gltf 
Author: Jakob Henerey (https://sketchfab.com/hellonintendo8)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/arrow-7b62dae60f2c4443b9f499c833171ca5
Title: Arrow
*/

import { useGLTF } from '@react-three/drei';
import { motion } from 'framer-motion-3d';
import React, { useRef, useState } from 'react';
import { useRenderStore } from '../../../../../../store/storeWorld';

export function Arrow(props) {
  const scene = useRenderStore((state) => state.scene);
  const setScene = useRenderStore((state) => state.setScene);
  const [isHovered, setIsHovered] = useState(false);
  const { nodes, materials } = useGLTF('assets/models/arrow/scene.gltf')

  const handleAnimate = () => {
    setIsHovered(true);
    setTimeout(() => {
      setIsHovered(false);
    }, 1000);
  };


  return (
    <motion.group
      {...props}
      dispose={null}
      animate={{
        scale: isHovered && scene === 1 ? 0.25 : 0.2,
      }}
      onPointerMissed={(e) => handleAnimate()}
      onClick={() => setScene(0)}
    >
      <mesh
        geometry={nodes.Object_2.geometry}
        material={materials.arrow}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </motion.group>
  );
}

useGLTF.preload('assets/models/arrow/scene.gltf')
